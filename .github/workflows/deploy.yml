name: Deploy iOS App to App Store

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    name: "üöÄ Deploy to App Store"
    runs-on: macos-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: brew install gh

      # Authenticate GitHub CLI with the GitHub Token
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # Download the IPA from the latest release
      - name: Download IPA from Latest Release
        run: |
          gh release download -p "FlutterIpaExport.ipa" -O FlutterIpaExport.ipa || { echo "‚ùå IPA not found!"; exit 1; }

      # Create Fastlane directory if it doesn't exist
      - name: Create Fastlane Directory
        run: mkdir -p ios/fastlane

      # Install Ruby & Fastlane dependencies
      - name: Install Ruby & Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      # Verify the existence of AuthKey.p8 and configure environment variables
      - name: Verify and Configure API Key
        run: |
          if [ ! -f "ios/fastlane/AuthKey.p8" ]; then
            echo "‚ùå AuthKey.p8 is missing in ios/fastlane!"
            exit 1
          fi
          echo "‚úÖ AuthKey.p8 found."
          echo "APP_STORE_CONNECT_API_PRIVATE_KEY_PATH=$GITHUB_WORKSPACE/ios/fastlane/AuthKey.p8" >> $GITHUB_ENV

      # Debug Fastlane files for troubleshooting
      - name: Debug Fastlane Files
        run: ls -la ios/fastlane

      # Configure Fastlane's Fastfile for iOS deployment
      - name: Configure Fastlane
        run: |
          cat <<EOF > ios/fastlane/Fastfile
          default_platform(:ios)

          platform :ios do
            desc "Push a new release build to the App Store"
            lane :release do
              upload_to_app_store(
                api_key: {
                  key_id: "${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}",
                  issuer_id: "${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}",
                  key_filepath: ENV['APP_STORE_CONNECT_API_PRIVATE_KEY_PATH']
                },
                app_identifier: "com.suellas.rewards"
              )
            end
          end
          EOF

      # Install Fastlane dependencies via Bundler
      - name: Install Fastlane Dependencies
        run: |
          cd ios
          bundle install

      # Upload IPA to App Store using Fastlane
      - name: Upload IPA to App Store
        run: |
          echo "üîç Checking API Key Environment Variables..."
          echo "APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}"
          echo "APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}"
          echo "APP_STORE_CONNECT_API_PRIVATE_KEY_PATH: $APP_STORE_CONNECT_API_PRIVATE_KEY_PATH"

          # Ensure the private key exists before uploading
          if [ ! -f "$APP_STORE_CONNECT_API_PRIVATE_KEY_PATH" ]; then
            echo "‚ùå Private key file not found at $APP_STORE_CONNECT_API_PRIVATE_KEY_PATH!"
            exit 1
          fi

          # Execute Fastlane for deployment
          cd ios
          bundle exec fastlane release || { echo "‚ùå Fastlane upload failed!"; exit 1; }

      # Completion message
      - name: Complete job
        run: echo "‚úÖ Deployment Completed Successfully"
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_PRIVATE_KEY_PATH: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY_PATH }}
          FASTLANE_OPT_OUT_USAGE: true
